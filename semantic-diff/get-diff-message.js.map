{"version":3,"file":"get-diff-message.js","sourceRoot":"","sources":["../src/semantic-diff/get-diff-message.ts"],"names":[],"mappings":"AACA,OAAO,EAAyB,SAAS,EAAE,UAAU,EAAE,MAAM,SAAS,CAAC;AAIvE,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,GAAQ,EAAoB,EAAE,CAAC,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,OAAO,IAAI,GAAG,CAAC;AAClG,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAE9B,SAAS,UAAU,CAAC,GAAwB;IAC1C,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;QACnB,OAAO,SAAS,GAAG,CAAC,KAAK,GAAG,CAAA;KAC7B;IAED,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;QAClB,OAAO,QAAQ,GAAG,CAAC,OAAO,GAAG,CAAA;KAC9B;IAED,IAAI,WAAW,CAAC,GAAG,CAAC,EAAE;QACpB,OAAO,GAAG,CAAC,KAAK;YACd,CAAC,CAAC,cAAc,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI;YAC1C,CAAC,CAAC,cAAc,GAAG,CAAC,IAAI,GAAG,CAAC;KAC/B;IAED,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,EAAE,CAAC,CAAC;AACzC,CAAC;AAID,iGAAiG;AACjG,SAAS,WAAW,CAAC,CAAO;IAC1B,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,CAAC;AACnE,CAAC;AAED,MAAM,gBAAgB,GAAoF;IACxG,WAAW;IACX,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,iBAAiB;IAC1D,YAAY;IACZ,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,mBAAmB,UAAU,CAAC,GAAG,CAAC,EAAE;IAC7E,cAAc;IACd,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,mBAAmB;CAC7D,CAAA;AAED;;;;;;;;GAQG;AACH,MAAM,UAAU,cAAc,CAAC,IAAU,EAAE,GAAkC,EAAE,GAAkC;IAC/G,aAAa;IACb,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACxD,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QAED,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,EAAG,GAAW,CAAC,IAAI,CAAC,KAAK,CAAC,EAAG,GAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;KACrF;IAED,iBAAiB;IACjB,IAAI,IAAI,CAAC,IAAI,IAAI,gBAAgB,EAAE;QACjC,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KACpD;IAED,MAAM,IAAI,KAAK,CAAC,sBAAsB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AACrD,CAAC","sourcesContent":["import { Attribute } from 'parse5-es-module';\nimport { ASTNode, DiffedObject, isElement, isTextNode } from './types';\n\ntype Diff = deepDiff.IDiff;\n\nexport const isAttribute = (arg: any): arg is Attribute => arg && 'name' in arg && 'value' in arg;\nconst isArray = Array.isArray;\n\nfunction identifier(arg: ASTNode | Attribute): any {\n  if (isTextNode(arg)) {\n    return `text \"${arg.value}\"`\n  }\n\n  if (isElement(arg)) {\n    return `tag <${arg.tagName}>`\n  }\n\n  if (isAttribute(arg)) {\n    return arg.value\n      ? `attribute [${arg.name}=\"${arg.value}\"]`\n      : `attribute [${arg.name}]`;\n  }\n\n  throw new Error(`Unknown arg: ${arg}`);\n}\n\ntype ArrayDiff = Diff & { kind: 'A', item: Diff, index: number };\n\n/** Asserts that the diff is an array diff, returns type assertions to remove optional props.  */\nfunction isArrayDiff(d: Diff): d is ArrayDiff {\n  return d.kind === 'A' && !!d.item && typeof d.index === 'number';\n}\n\nconst messageTemplates: { [key: string]: (diff: Diff, lhs: DiffedObject, rhs: DiffedObject) => string } = {\n  // New diff\n  N: (diff, lhs, rhs) => `${identifier(rhs)} has been added`,\n  // Edit diff\n  E: (diff, lhs, rhs) => `${identifier(lhs)} was changed to ${identifier(rhs)}`,\n  // Delete diff\n  D: (diff, lhs, rhs) => `${identifier(lhs)} has been removed`,\n}\n\n/**\n * Generates a human understandable message for a HTML diff.\n *\n * @param diff The diff\n * @param lhs The left hand side diffed object. Can be a HTML ASTNode or an Attribute.\n * @param rhs The left hand side diffed object. Can be a HTML ASTNode or an Attribute.\n *\n * @returns the message\n */\nexport function getDiffMessage(diff: Diff, lhs: DiffedObject | DiffedObject[], rhs: DiffedObject | DiffedObject[]): string {\n  // Array diff\n  if (isArray(lhs) || isArray(rhs)) {\n    if (!isArrayDiff(diff) || !isArray(lhs) || !isArray(rhs)) {\n      throw new Error('Not all arguments are array diffs');\n    }\n\n    return getDiffMessage(diff.item, (lhs as any)[diff.index], (rhs as any)[diff.index])\n  }\n\n  // Non-array diff\n  if (diff.kind in messageTemplates) {\n    return messageTemplates[diff.kind](diff, lhs, rhs);\n  }\n\n  throw new Error(`Unknown diff kind: ${diff.kind}`);\n}"]}